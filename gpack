#!/bin/bash
# GPack Package Manager
# Package Management Interface
# Aaron Marks 2005
# Fri Apr 29 20:24:06 UTC 2005

########################################################################
#
# Copyright 2005
# Aaron Marks.
#
# GPack is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; either version 2, or (at your option) any
# later version.
#
# GPack is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.
#
# You should have received a copy of the GNU General Public License
# along with GPack; see the file COPYING.  If not, write to the Free
# Software Foundation, 59 Temple Place - Suite 330, Boston, MA
# 02111-1307, USA.
#
########################################################################

#later on in Sat system this will be in absolute dir
if ! . ./gpackint.sh ; then
    echo "Could not find GPack function library. Check GPack setup."
    exit 1
fi

# set up package list (for multiple install/removes etc.)
PKGS=(`echo $@`)
unset PKGS[0]

case $1 in
    install | -I)
        if [[ $# > 1 ]]; then
#            pkgInstall $2
            for i in ${PKGS[@]}; do
                pkgInstall $i;
            done
        else
            $0
            exit 1
        fi
        ;;
    depinst | -i)
        if [[ $# > 1 ]]; then
#            pkgDepInstall $2
            for i in ${PKGS[@]}; do
                pkgDepInstall $i
            done
        else
            $0
            exit 1
        fi
        ;;
    fileinst | -f)
        if [[ $# > 1 ]]; then
#            pkgDoInstall $2
            for i in ${PKGS[@]}; do
                pkgDoInstall $i
            done
        else
            $0
            exit 1
        fi
        ;;
    build | -b)
        if [[ $# > 1 ]]; then
#            pkgFind $2
            for i in ${PKGS[@]}; do
                pkgFind $i
            done
        else
            $0
            exit 1
        fi

        if [ "$?" == "0" ]; then
            echo "Failed to install package '$2' -- could not find package."
            exit 0
        fi
        pkgBuild $RETURN
        ;;
    version | -v)
        for i in ${PKGS[@]}; do
            pkgVersion $i
            echo "$i $RETURN"
        done
        ;;
    sync | -s)
        echo "Yet to be implemented..."
        ;;
    remove | -r)
        if [[ $# > 1 ]]; then
#            pkgRemove $2
            for i in ${PKGS[@]}; do
                pkgRemove $i
            done
        else
            $0
            exit 1
        fi
        ;;
    info | -a)
        if [[ $# > 1 ]]; then
#            pkgFind $2
            for i in ${PKGS[@]}; do
                pkgFind $i
            done
        else
            $0
            exit 1
        fi

        if [ "$?" == "0" ]; then
            echo "package not found"
            exit 1
        fi
        . $RETURN/$PKGFILE
        pkgInfo
        ;;
    installed | -c)
#        echo "Name            Version"
        for i in $PKGINFO/*; do
            #echo `echo $i | sed 's|.*/||'`

            #get more than just the package name
            . $i/$PKGFILE
            echo $name "          " $version
        done
        ;;
    isinstalled | -p)
        if [[ $# > 1 ]]; then
            for i in ${PKGS[@]}; do
                pkgInstalled $i
                if [ "$?" == "1" ]; then
                    echo "$i is installed"
                else
                    echo "$i is not installed"
                fi
            done
        else
            $0
            exit 1
        fi
        ;;
    *)
        echo "Sat GNU/Linux gpack $VERSION"
        echo "usage: $0 <command> [<package name>|<package file>]"
        echo "  command can be:"
        echo "          install     -I  - install package from repositry"
        echo "          depinst     -i  - install package and its dependancies"
        echo "          fileinst    -f  - install package from file"
        echo "          build       -b  - build package without install"
        echo "          version     -v  - check version of package in repositry"
        echo "          sync        -s  - synchronise package repositry"
        echo "          remove      -r  - remove package"
        echo "          info        -a  - informatino about package"
        echo "          installed   -c  - list installed packages"
        echo "          isinstalled -p  - shows if package is installed or not"
esac

